[{"/Users/omofolarin/Documents/mini-unsplash/src/reportWebVitals.js":"1","/Users/omofolarin/Documents/mini-unsplash/src/App.js":"2","/Users/omofolarin/Documents/mini-unsplash/src/index.js":"3","/Users/omofolarin/Documents/mini-unsplash/src/store/index.js":"4","/Users/omofolarin/Documents/mini-unsplash/src/api/index.js":"5","/Users/omofolarin/Documents/mini-unsplash/src/components/search-input/index.jsx":"6","/Users/omofolarin/Documents/mini-unsplash/src/components/container/index.jsx":"7","/Users/omofolarin/Documents/mini-unsplash/src/components/hero/index.jsx":"8","/Users/omofolarin/Documents/mini-unsplash/src/components/image-grid/index.jsx":"9","/Users/omofolarin/Documents/mini-unsplash/src/components/image-thumbnail/index.jsx":"10","/Users/omofolarin/Documents/mini-unsplash/src/hooks/use-window-resize.js":"11"},{"size":362,"mtime":1611052588827,"results":"12","hashOfConfig":"13"},{"size":7914,"mtime":1611111031459,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1611110956549,"results":"15","hashOfConfig":"13"},{"size":1441,"mtime":1611113342783,"results":"16","hashOfConfig":"13"},{"size":830,"mtime":1611086151577,"results":"17","hashOfConfig":"13"},{"size":841,"mtime":1611110952544,"results":"18","hashOfConfig":"13"},{"size":265,"mtime":1611111035581,"results":"19","hashOfConfig":"13"},{"size":573,"mtime":1611111141300,"results":"20","hashOfConfig":"13"},{"size":2327,"mtime":1611114500524,"results":"21","hashOfConfig":"13"},{"size":1174,"mtime":1611112832331,"results":"22","hashOfConfig":"13"},{"size":979,"mtime":1611114386793,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15cwsmu",{"filePath":"26","messages":"27","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/omofolarin/Documents/mini-unsplash/src/reportWebVitals.js",[],"/Users/omofolarin/Documents/mini-unsplash/src/App.js",["49","50","51","52","53"],"import logo from \"./logo.svg\";\nimport * as React from \"react\";\nimport { Search as SearchIcon } from \"react-feather\";\nimport useStore from \"./store\";\nimport Hero from \"./components/hero\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter as Router, Route, useHistory } from \"react-router-dom\";\nimport { Animate } from \"react-simple-animate\";\nimport \"./index.css\";\n\n// const styles = {\n//   centralize: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//   },\n// };\n// const { assign } = Object;\n\n// const Hero = () => {\n//   const history = useHistory();\n//   const rootStyle = assign(\n//     {\n//       width: \"100%\",\n//       position: \"relative\",\n//       height: \"25em\",\n//       backgroundColor: \"#CCC\",\n//     },\n//     styles.centralize\n//   );\n//   const pathname = history.location.pathname;\n//   return (\n//     <div style={rootStyle}>\n//       <Container>\n//         {pathname === \"/\" && <SearchInput />}\n//         {pathname !== \"/\" && (\n//           <h1>Search Results for \"{pathname.substring(1)}\"</h1>\n//         )}\n//       </Container>\n//     </div>\n//   );\n// };\n\n// const Container = (props) => {\n//   const { children, maxWidth } = props;\n//   const rootStyle = {\n//     maxWidth: maxWidth ?? \"980px\",\n//     width: \"100%\",\n//   };\n//   return <div style={rootStyle}>{children}</div>;\n// };\n\n// const SearchInput = () => {\n//   const { searchValue, onChange, onSearch } = useStore();\n//   const rootStyle = {\n//     width: \"80%\",\n//     margin: \"0 auto\",\n//     height: \"3em\",\n//     backgroundColor: \"#fff\",\n//     border: \"1px solid transparent\",\n//     borderRadius: \"5px\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     padding: \"0 16px\",\n//   };\n\n//   const searchIcon = {\n//     color: \"#767676\",\n//   };\n\n//   const inputStyle = {\n//     width: \"100%\",\n//     flexGrow: 1,\n//     display: \"flex\",\n//     height: \"100%\",\n//     border: \"none\",\n//     outline: \"none\",\n//     fontSize: \"20px\",\n//     borderShadow: \"none\",\n//   };\n\n//   const inputContainerStyle = {\n//     flex: 1,\n//     position: \"relative\",\n//     width: \"100%\",\n//     display: \"flex\",\n//     paddingLeft: \"16px\",\n//     height: \"3em\",\n//   };\n\n//   const searchButtonStyle = {\n//     cursor: \"pointer\",\n//   };\n\n//   return (\n//     <form style={rootStyle} onSubmit={onSearch}>\n//       <div role=\"button\" style={searchButtonStyle} onClick={onSearch}>\n//         <SearchIcon style={searchIcon} />\n//       </div>\n//       <div style={inputContainerStyle}>\n//         <input\n//           type=\"search\"\n//           autoComplete=\"off\"\n//           style={inputStyle}\n//           placeholder=\"Search for photo\"\n//           value={searchValue}\n//           onChange={onChange}\n//         />\n//       </div>\n//     </form>\n//   );\n// };\n\n// const ImageGrid = (props) => {\n//   const { data = Array(6).fill({}), isFetching } = props;\n//   const [readyToRender, setReadyToRender] = React.useState(false);\n//   const gridRef = React.useRef(null);\n//   const rootStyle = assign(\n//     {\n//       width: \"80%\",\n//       margin: \"0 auto\",\n//       height: \"auto\",\n//       position: \"relative\",\n//       top: \"-5em\",\n//       zIndex: 2,\n//     },\n\n//     styles.centralize\n//   );\n\n//   React.useLayoutEffect(() => {\n//     function resizeGridItem(item) {\n//       // let grid = document.getElementsByClassName(\"grid\")[0];\n//       let grid = gridRef.current;\n//       let rowHeight = parseInt(\n//         window.getComputedStyle(grid).getPropertyValue(\"grid-auto-rows\")\n//       );\n//       let rowGap = parseInt(\n//         window.getComputedStyle(grid).getPropertyValue(\"grid-row-gap\")\n//       );\n\n//       let rowSpan = Math.ceil(\n//         (item.querySelector(\".content\").getBoundingClientRect().height +\n//           rowGap) /\n//           (rowHeight + rowGap)\n//       );\n//       item.style.gridRowEnd = \"span \" + rowSpan;\n//     }\n\n//     function resizeAllGridItems() {\n//       const allItems = gridRef.current.getElementsByClassName(\"item\");\n//       for (let x = 0; x < allItems.length; x++) {\n//         resizeGridItem(allItems[x]);\n//       }\n//     }\n\n//     setTimeout(() => {\n//       resizeAllGridItems();\n//       setReadyToRender(true);\n//     }, 300);\n//   }, [gridRef, isFetching, setReadyToRender]);\n\n//   return (\n//     // <Animate\n//     //   play={readyToRender}\n//     //   start={{ opacity: 0, filter: \"blur(10px)\" }}\n//     //   end={{ opacity: 1, filter: \"blur(0)\" }}\n//     //   duration={0.5}\n//     // >\n//     <div style={rootStyle}>\n//       <Container maxWidth=\"900px\">\n//         <div className=\"grid\" ref={gridRef}>\n//           {data.map((item, j) => {\n//             return (\n//               <ImageThumbnail\n//                 key={j.toString()}\n//                 data={item}\n//                 isFetching={isFetching}\n//                 display={readyToRender}\n//               />\n//             );\n//           })}\n//         </div>\n//       </Container>\n//     </div>\n//     // </Animate>\n//   );\n// };\n\n// const ImageThumbnail = ({ isFetching, data, display }) => {\n//   return (\n//     <>\n//       {isFetching && (\n//         <div className=\"item\">\n//           <div className=\"content\">\n//             <div\n//               style={{\n//                 width: \"100%\",\n//                 height: \"22em\",\n//                 backgroundColor: \"#eee\",\n//               }}\n//             ></div>\n//           </div>\n//         </div>\n//       )}\n\n//       {!isFetching && (\n//         <div\n//           className=\"item\"\n//           style={{ opacity: 1, transition: \"all 5s\", transitionDelay: \"10s\" }}\n//         >\n//           <div className=\"content\">\n//             <img\n//               src={data?.urls?.regular}\n//               alt=\"thumbnail\"\n//               style={{ width: \"100%\" }}\n//             />\n//             <div\n//               style={{\n//                 position: \"sticky\",\n//                 width: \"100%\",\n//                 zIndex: 1,\n//                 top: \"100%\",\n//                 // marginBottom: \"-5em\",\n//               }}\n//             >\n//               <div\n//                 style={{\n//                   position: \"absolute\",\n//                   backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n//                   backgroundImage:\n//                     \"linear-gradient(180deg, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.9))\",\n//                   display: \"flex\",\n//                   width: \"97.5%\",\n//                   flexDirection: \"column\",\n//                   height: \"auto\",\n//                   top: \"-7em\",\n//                   padding: \"8px 4px\",\n//                 }}\n//               >\n//                 <p\n//                   style={{\n//                     fontSize: \"18px\",\n//                     color: \"#fff\",\n//                     paddingLeft: \"8px\",\n//                   }}\n//                 >\n//                   {data?.user?.name}\n//                 </p>\n//                 <p\n//                   style={{\n//                     padding: \"0 4px 0 8px\",\n//                     fontSize: \"16px\",\n//                     color: \"#fff\",\n//                   }}\n//                 >\n//                   {data?.user?.location}\n//                 </p>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// const Modal = () => {};\n\nconst reactQueryClient = new QueryClient();\n\nfunction App() {\n  const { resource, isFetching } = useStore();\n\n  return (\n    <div>\n      <Hero />\n      <ImageGrid data={resource} isFetching={isFetching} />\n    </div>\n  );\n}\n\nfunction Root() {\n  return (\n    <QueryClientProvider client={reactQueryClient}>\n      <Router>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n\n        <Route exact path=\"/:search\">\n          <App />\n        </Route>\n      </Router>\n    </QueryClientProvider>\n  );\n}\n\nexport default Root;\n",["54","55"],"/Users/omofolarin/Documents/mini-unsplash/src/index.js",[],["56","57"],"/Users/omofolarin/Documents/mini-unsplash/src/store/index.js",["58","59","60","61"],"/Users/omofolarin/Documents/mini-unsplash/src/api/index.js",[],"/Users/omofolarin/Documents/mini-unsplash/src/components/search-input/index.jsx",["62"],"/Users/omofolarin/Documents/mini-unsplash/src/components/container/index.jsx",[],"/Users/omofolarin/Documents/mini-unsplash/src/components/hero/index.jsx",[],"/Users/omofolarin/Documents/mini-unsplash/src/components/image-grid/index.jsx",[],"/Users/omofolarin/Documents/mini-unsplash/src/components/image-thumbnail/index.jsx",[],"/Users/omofolarin/Documents/mini-unsplash/src/hooks/use-window-resize.js",[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":3,"column":20,"nodeType":"65","messageId":"66","endLine":3,"endColumn":30},{"ruleId":"63","severity":1,"message":"68","line":7,"column":42,"nodeType":"65","messageId":"66","endLine":7,"endColumn":52},{"ruleId":"63","severity":1,"message":"69","line":8,"column":10,"nodeType":"65","messageId":"66","endLine":8,"endColumn":17},{"ruleId":"70","severity":2,"message":"71","line":278,"column":8,"nodeType":"72","endLine":278,"endColumn":17},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"63","severity":1,"message":"79","line":8,"column":10,"nodeType":"65","messageId":"66","endLine":8,"endColumn":23},{"ruleId":"63","severity":1,"message":"80","line":8,"column":25,"nodeType":"65","messageId":"66","endLine":8,"endColumn":41},{"ruleId":"63","severity":1,"message":"81","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":21},{"ruleId":"63","severity":1,"message":"82","line":9,"column":23,"nodeType":"65","messageId":"66","endLine":9,"endColumn":37},{"ruleId":"63","severity":1,"message":"83","line":9,"column":9,"nodeType":"65","messageId":"66","endLine":9,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","'useHistory' is defined but never used.","'Animate' is defined but never used.","react/jsx-no-undef","'ImageGrid' is not defined.","JSXIdentifier","no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"'selectedPhoto' is assigned a value but never used.","'setSelectedPhoto' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","'setIsModalOpen' is assigned a value but never used.","'searchIcon' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]